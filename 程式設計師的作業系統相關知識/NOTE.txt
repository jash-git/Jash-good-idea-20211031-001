程式設計師的作業系統相關知識

目錄:
    认识操作系统; 1
        操作系统; 8
        计算机硬件简介; 9
            CPU; 10
            多线程和多核芯片; 11
            内存; 13
                寄存器; 14
                高速缓存; 14
                主存; 15
                磁盘; 15
            I/O 设备; 17
            总线; 20
            计算机启动过程; 22
        操作系统博物馆; 22
            大型机操作系统; 23
            服务器操作系统; 23
            多处理器操作系统; 23
            个人计算机系统; 23
            掌上计算机操作系统; 23
            嵌入式操作系统; 23
            传感器节点操作系统; 23
            实时操作系统; 24
            智能卡操作系统; 24
        操作系统概念; 24
            进程; 24
            地址空间; 26
            文件; 26
            保护; 28
            shell; 28
        系统调用; 29
            用于进程管理的系统调用; 32
            用于文件管理的系统调用; 35
            用于目录管理的系统调用; 36
            其他系统调用; 37
            Win 32 API; 37
        操作系统结构; 40
            单体系统; 40
            分层系统; 41
            微内核; 41
            客户-服务器模式; 42
    进程和线程; 43
        进程; 44
            进程模型; 46
            进程的创建; 47
                系统初始化; 47
                系统调用创建; 48
                用户请求创建; 48
                批处理创建; 48
            进程的终止; 49
                正常退出; 50
                错误退出; 50
                严重错误; 50
                被其他进程杀死; 50
            进程的层次结构; 50
                UNIX 进程体系; 50
                Windows 进程体系; 51
            进程状态; 51
            进程的实现; 53
        线程; 55
            线程的使用; 55
                多线程解决方案; 55
                单线程解决方案; 56
                状态机解决方案; 56
            经典的线程模型; 57
                线程系统调用; 59
            POSIX 线程; 60
            线程实现; 61
                在用户空间中实现线程; 62
                在用户空间实现线程的优势; 62
                在用户空间实现线程的劣势; 63
            在内核中实现线程; 63
            混合实现; 64
        进程间通信; 65
            竞态条件; 66
            临界区; 67
            忙等互斥; 68
                屏蔽中断; 68
                锁变量; 68
                严格轮询法; 69
                Peterson 解法; 70
                TSL 指令; 72
            睡眠与唤醒; 73
                生产者-消费者问题; 73
            信号量; 75
                用信号量解决生产者 - 消费者问题; 76
            互斥量; 78
                Futexes; 80
                Pthreads 中的互斥量; 81
            管程; 83
            消息传递; 88
                消息传递系统的设计要点; 88
                用消息传递解决生产者-消费者问题; 89
            屏障; 90
            避免锁：读-复制-更新; 91
        调度; 92
            调度介绍; 92
                进程行为; 92
                何时调度; 93
                调度算法的分类; 95
                调度算法的目标; 95
            批处理中的调度; 97
                先来先服务; 97
                最短作业优先; 98
                最短剩余时间优先; 99
            交互式系统中的调度; 99
                轮询调度; 99
                优先级调度; 100
                多级队列; 101
                最短进程优先; 102
                保证调度; 103
                彩票调度; 103
                公平分享调度; 103
            实时系统中的调度; 104
            调度策略和机制; 105
            线程调度; 105
    内存; 107
        无存储器抽象; 108
            运行多个程序; 110
        一种存储器抽象：地址空间; 111
            地址空间的概念; 112
                基址寄存器和变址寄存器; 112
            交换技术; 113
                交换过程; 114
            空闲内存管理; 118
                使用位图的存储管理; 118
                使用链表进行管理; 119
        虚拟内存; 121
            分页; 122
                存在映射的页如何映射; 124
                未映射的页如何映射; 124
            页表; 125
                页表项的结构; 126
            加速分页过程; 127
                转换检测缓冲区; 128
                软件 TLB 管理; 131
            针对大内存的页表; 133
                多级页表; 133
                倒排页表; 135
        页面置换算法; 135
            最优页面置换算法; 136
            最近未使用页面置换算法; 136
            先进先出页面置换算法; 137
            第二次机会页面置换算法; 138
            时钟页面置换算法; 139
            最近最少使用页面置换算法; 140
            用软件模拟 LRU; 140
            工作集页面置换算法; 142
            工作集时钟页面置换算法; 144
            页面置换算法小结; 146
    文件系统; 147
        文件; 149
            文件命名; 149
            文件结构; 151
            文件类型; 152
            文件访问; 155
            文件属性; 156
            文件操作; 158
        目录; 158
            一级目录系统; 158
            层次目录系统; 159
            路径名; 160
            目录操作; 162
        文件系统的实现; 162
            文件系统布局; 162
                引导块; 163
                超级块; 164
                空闲空间块; 164
                碎片; 165
                inode; 166
            文件的实现; 167
                连续分配; 167
                链表分配; 169
                使用内存表进行链表分配; 170
                inode        ; 171
            目录的实现; 172
            共享文件; 176
            日志结构文件系统; 180
            日志文件系统; 182
            虚拟文件系统; 183
        文件系统的管理和优化; 184
            磁盘空间管理; 185
                块大小; 185
                记录空闲块; 185
            磁盘配额; 189
            文件系统备份; 190
                物理转储和逻辑转储; 192
            文件系统的一致性; 193
            文件系统性能; 196
                高速缓存; 196
                块提前读; 197
                减少磁盘臂运动; 197
                磁盘碎片整理; 198
    I/O; 198
        I/O 设备; 199
            块设备; 199
            块设备的缺点; 199
            字符设备; 199
            设备控制器; 200
            内存映射 I/O; 202
            内存映射 I/O 的优点和缺点; 205
            直接内存访问; 208
            DMA 工作原理; 208
            重温中断; 209
            精确中断和不精确中断; 211
        IO 软件原理; 212
            I/O 软件目标; 212
                设备独立性; 212
                错误处理; 213
                同步和异步传输; 213
                缓冲; 214
                共享和独占; 214
            使用程序控制 I/O; 214
            使用中断驱动 I/O; 215
            使用 DMA 的 I/O; 216
        I/O 层次结构; 216
            中断处理程序; 217
            设备驱动程序; 218
            与设备无关的 I/O 软件; 221
                缓冲; 222
                错误处理; 226
                设备驱动程序统一接口; 226
                分配和释放; 226
                设备无关的块; 227
            用户空间的 I/O 软件; 227
        盘; 227
            盘硬件; 227
                磁盘; 227
                RAID; 228
                磁盘格式化; 228
            磁盘臂调度算法; 230
            错误处理; 233
            稳定存储器; 235
        时钟; 239
            时钟硬件; 239
            时钟软件; 239
            软定时器; 240
    死锁; 240
        前言; 240
        资源; 241
            可抢占资源和不可抢占资源; 241
            资源获取; 241
        死锁; 244
            资源死锁的条件; 244
            死锁模型; 244
        鸵鸟算法; 248
        死锁检测和恢复; 249
            每种类型一个资源的死锁检测方式; 249
            每种类型多个资源的死锁检测方式; 249
            从死锁中恢复; 250
                通过抢占进行恢复; 250
                通过回滚进行恢复; 250
                杀死进程恢复; 251
        死锁避免; 251
            单个资源的银行家算法; 251
        破坏死锁; 253
            破坏互斥条件; 253
            破坏保持等待的条件; 253
            破坏不可抢占条件; 253
            破坏循环等待条件; 253
        其他问题; 254
            两阶段加锁; 254
            通信死锁; 255
            活锁; 256
            饥饿; 256
        总结; 256
    操作系统面试题; 257
        解释一下什么是操作系统; 257
        解释一下操作系统的主要目的是什么; 258
        操作系统的种类有哪些; 258
        操作系统结构; 258
            单体系统; 258
            分层系统; 259
            微内核; 259
            客户-服务器模式; 260
        什么是按需分页; 260
        多处理系统的优势; 260
        什么是内核; 261
        什么是实时系统; 261
        什么是虚拟内存; 261
        什么是进程和进程表; 262
        什么是线程，线程和进程的区别; 262
        使用多线程的好处是什么; 263
        什么是 RR 调度算法; 263
        导致系统出现死锁的情况; 263
        RAID 的不同级别; 263
        什么是 DMA ; 264
        多线程编程的好处是什么; 264
        什么是设备驱动程序; 264
        进程间的通信方式; 265
            通信概念; 265
            解决方案; 265
        进程间状态模型; 266
        调度算法都有哪些; 268
            批处理中的调度; 268
                先来先服务; 268
                最短作业优先; 269
                最短剩余时间优先; 269
            交互式系统中的调度; 269
                轮询调度; 269
                优先级调度; 270
                最短进程优先; 270
                彩票调度; 271
                公平分享调度; 271
        页面置换算法都有哪些; 271
        影响调度程序的指标是什么; 272
        什么是僵尸进程; 273
    关于操作系统，你必须知道的名词; 273
    勘误; 303

完整圖文: